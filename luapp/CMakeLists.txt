cmake_minimum_required(VERSION 3.1)
project(luapp)

aux_source_directory(. DIR_SRCS)
file(GLOB_RECURSE DIR_INCS *.h *.hpp)
source_group("Include Files" FILES ${DIR_INCS})
add_executable(${PROJECT_NAME} ${DIR_SRCS} ${DIR_INCS})

include_directories(${PROJECT_SOURCE_DIR}/../)
include_directories(${PROJECT_SOURCE_DIR}/../thirdparty/lua-5.3.5/src)
include_directories(${PROJECT_SOURCE_DIR}/../thirdparty/log4cplus/include)
include_directories(${PROJECT_SOURCE_DIR}/../thirdparty/protobuf/src)
include_directories(${PROJECT_SOURCE_DIR}/../thirdparty/curl/include)
include_directories(${PROJECT_BINARY_DIR}/../thirdparty/log4cplus/include)

IF (CMAKE_SYSTEM_NAME MATCHES "Linux" OR CMAKE_SYSTEM_NAME MATCHES "Darwin")
    target_link_libraries(${PROJECT_NAME} gateway proroute protonet protolua lualib crypto luaredis luamongo luakafka lua log4cplusS libprotobuf rdkafka libcurl hiredis mongoc_static bson_static dl pthread)
ELSE ()
    target_link_libraries(${PROJECT_NAME} gateway proroute protonet protolua lualib crypto luaredis luamongo luakafka lua log4cplusS libprotobuf rdkafka libcurl wldap32 hiredis mongoc_static bson_static)
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux" OR CMAKE_SYSTEM_NAME MATCHES "Darwin")
